{"version":3,"file":"static/js/425.635b7a91.chunk.js","mappings":"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","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Spinner/>;\r\n        case 'loading':\r\n            return newItemLoading ? <Component/> : <Spinner/>;\r\n        case 'confirmed':\r\n            return <Component/>;\r\n        case 'error':\r\n            return <ErrorMessage/>;\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setnewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(0);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {getAllComics, process, setProcess} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n            .then(() => setProcess('confirmed'));\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n        setComicsList([...comicsList, ...newComicsList]);\r\n        setnewItemLoading(false);\r\n        setOffset(offset + 8);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n    function renderItems (arr) {\r\n        const items = arr.map((item, i) => {\r\n            return (\r\n                <li className=\"comics__item\" key={i}>\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\r\n            <button \r\n                disabled={newItemLoading} \r\n                style={{'display' : comicsEnded ? 'none' : 'block'}}\r\n                className=\"button button__main button__long\"\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["setContent","process","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","setnewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","_jsxs","className","children","arr","items","map","item","i","Link","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","onClick","_Fragment","Helmet","name","content","AppBanner","ComicsList","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}